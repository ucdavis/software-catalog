# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Codacy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '32 12 * * 4'

permissions:
  contents: read

jobs:
  codacy-security-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v4

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        id: codacy
        continue-on-error: true
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force failure on 100 issues found
          max-allowed-issues: 100

      - name: Parse SARIF results
        id: parse_sarif
        run: |
          issue_count=$(jq '[.runs[].results[]] | length' results.sarif)
          has_critical=$(jq '[.runs[].results[] | select(.properties.securitySeverity == "critical")] | length > 0' results.sarif)
          has_major=$(jq '[.runs[].results[] | select(.properties.securitySeverity == "major")] | length > 0' results.sarif)
          has_minor=$(jq '[.runs[].results[] | select(.properties.securitySeverity == "minor")] | length > 0' results.sarif)
          echo "issue_count=$issue_count" >> $GITHUB_OUTPUT
          echo "has_critical=$has_critical" >> $GITHUB_OUTPUT
          echo "has_major=$has_major" >> $GITHUB_OUTPUT
          echo "has_minor=$has_minor" >> $GITHUB_OUTPUT

      - name: Comment on PR with Codacy issues
        if: github.event_name == 'pull_request' && steps.codacy.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ⚠️ Codacy found one or more issues in this PR.
            Please review the [Code Scanning Alerts](${{ github.server_url }}/${{ github.repository }}/security/code-scanning) for more details.

      - name: Add 'codacy-fail' label to PR
        if: github.event_name == 'pull_request' && steps.codacy.outcome == 'failure'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: codacy-fail

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      - name: Fail if Codacy found issues
        if: (steps.parse_sarif.outputs.has_major == 'true' || steps.parse_sarif.outputs.has_critical == 'true')
        run: exit 1
